// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stringproto.proto

package stringproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UpperRequest struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpperRequest) Reset()         { *m = UpperRequest{} }
func (m *UpperRequest) String() string { return proto.CompactTextString(m) }
func (*UpperRequest) ProtoMessage()    {}
func (*UpperRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f1197a66cc4b60, []int{0}
}

func (m *UpperRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpperRequest.Unmarshal(m, b)
}
func (m *UpperRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpperRequest.Marshal(b, m, deterministic)
}
func (m *UpperRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpperRequest.Merge(m, src)
}
func (m *UpperRequest) XXX_Size() int {
	return xxx_messageInfo_UpperRequest.Size(m)
}
func (m *UpperRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpperRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpperRequest proto.InternalMessageInfo

func (m *UpperRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type UpperResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpperResponse) Reset()         { *m = UpperResponse{} }
func (m *UpperResponse) String() string { return proto.CompactTextString(m) }
func (*UpperResponse) ProtoMessage()    {}
func (*UpperResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f1197a66cc4b60, []int{1}
}

func (m *UpperResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpperResponse.Unmarshal(m, b)
}
func (m *UpperResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpperResponse.Marshal(b, m, deterministic)
}
func (m *UpperResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpperResponse.Merge(m, src)
}
func (m *UpperResponse) XXX_Size() int {
	return xxx_messageInfo_UpperResponse.Size(m)
}
func (m *UpperResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpperResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpperResponse proto.InternalMessageInfo

func (m *UpperResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type CountRequest struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountRequest) Reset()         { *m = CountRequest{} }
func (m *CountRequest) String() string { return proto.CompactTextString(m) }
func (*CountRequest) ProtoMessage()    {}
func (*CountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f1197a66cc4b60, []int{2}
}

func (m *CountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountRequest.Unmarshal(m, b)
}
func (m *CountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountRequest.Marshal(b, m, deterministic)
}
func (m *CountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountRequest.Merge(m, src)
}
func (m *CountRequest) XXX_Size() int {
	return xxx_messageInfo_CountRequest.Size(m)
}
func (m *CountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountRequest proto.InternalMessageInfo

func (m *CountRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type CountResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountResponse) Reset()         { *m = CountResponse{} }
func (m *CountResponse) String() string { return proto.CompactTextString(m) }
func (*CountResponse) ProtoMessage()    {}
func (*CountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f1197a66cc4b60, []int{3}
}

func (m *CountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountResponse.Unmarshal(m, b)
}
func (m *CountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountResponse.Marshal(b, m, deterministic)
}
func (m *CountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountResponse.Merge(m, src)
}
func (m *CountResponse) XXX_Size() int {
	return xxx_messageInfo_CountResponse.Size(m)
}
func (m *CountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountResponse proto.InternalMessageInfo

func (m *CountResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*UpperRequest)(nil), "stringproto.UpperRequest")
	proto.RegisterType((*UpperResponse)(nil), "stringproto.UpperResponse")
	proto.RegisterType((*CountRequest)(nil), "stringproto.CountRequest")
	proto.RegisterType((*CountResponse)(nil), "stringproto.CountResponse")
}

func init() { proto.RegisterFile("stringproto.proto", fileDescriptor_e2f1197a66cc4b60) }

var fileDescriptor_e2f1197a66cc4b60 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x2e, 0x29, 0xca,
	0xcc, 0x4b, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x03, 0x93, 0x42, 0xdc, 0x48, 0x42, 0x4a, 0x0a,
	0x5c, 0x3c, 0xa1, 0x05, 0x05, 0xa9, 0x45, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x02,
	0x5c, 0xcc, 0xb9, 0xc5, 0xe9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20, 0xa6, 0x92, 0x22,
	0x17, 0x2f, 0x54, 0x45, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x16, 0x25, 0x0a, 0x5c, 0x3c, 0xce,
	0xf9, 0xa5, 0x79, 0x25, 0xb8, 0x0d, 0x51, 0xe5, 0xe2, 0x85, 0xaa, 0x80, 0x1a, 0x22, 0xc2, 0xc5,
	0x9a, 0x0c, 0x12, 0x00, 0x2b, 0x62, 0x0e, 0x82, 0x70, 0x8c, 0x26, 0x33, 0x72, 0xf1, 0x06, 0x83,
	0x5d, 0x17, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0xe4, 0xc0, 0xc5, 0x0a, 0xb6, 0x5d, 0x48,
	0x52, 0x0f, 0xd9, 0x27, 0xc8, 0x6e, 0x96, 0x92, 0xc2, 0x26, 0x05, 0xb1, 0x47, 0x89, 0x01, 0x64,
	0x02, 0xd8, 0x6a, 0x34, 0x13, 0x90, 0x1d, 0x8c, 0x66, 0x02, 0x8a, 0x4b, 0x95, 0x18, 0x92, 0xd8,
	0xc0, 0xc2, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x9a, 0x03, 0xf7, 0x4c, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StringServiceClient is the client API for StringService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StringServiceClient interface {
	Upper(ctx context.Context, in *UpperRequest, opts ...grpc.CallOption) (*UpperResponse, error)
	Count(ctx context.Context, in *CountRequest, opts ...grpc.CallOption) (*CountResponse, error)
}

type stringServiceClient struct {
	cc *grpc.ClientConn
}

func NewStringServiceClient(cc *grpc.ClientConn) StringServiceClient {
	return &stringServiceClient{cc}
}

func (c *stringServiceClient) Upper(ctx context.Context, in *UpperRequest, opts ...grpc.CallOption) (*UpperResponse, error) {
	out := new(UpperResponse)
	err := c.cc.Invoke(ctx, "/stringproto.StringService/Upper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stringServiceClient) Count(ctx context.Context, in *CountRequest, opts ...grpc.CallOption) (*CountResponse, error) {
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, "/stringproto.StringService/Count", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StringServiceServer is the server API for StringService service.
type StringServiceServer interface {
	Upper(context.Context, *UpperRequest) (*UpperResponse, error)
	Count(context.Context, *CountRequest) (*CountResponse, error)
}

func RegisterStringServiceServer(s *grpc.Server, srv StringServiceServer) {
	s.RegisterService(&_StringService_serviceDesc, srv)
}

func _StringService_Upper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServiceServer).Upper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stringproto.StringService/Upper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServiceServer).Upper(ctx, req.(*UpperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StringService_Count_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServiceServer).Count(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stringproto.StringService/Count",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServiceServer).Count(ctx, req.(*CountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StringService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stringproto.StringService",
	HandlerType: (*StringServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Upper",
			Handler:    _StringService_Upper_Handler,
		},
		{
			MethodName: "Count",
			Handler:    _StringService_Count_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stringproto.proto",
}
